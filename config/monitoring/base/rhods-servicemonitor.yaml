apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rhods-monitor-federation
  labels:
    monitor-component: rhods-resources
    team: rhods
spec:
  endpoints:
    - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      bearerTokenSecret:
        key: ""
      honorLabels: true
      params:
        'match[]':
          - '{__name__= "redhat-ods-operator-controller-manager-metrics-service"}'
          - ALERTS{alertname!="DeadManSnitch", alertstate="firing"}
      path: /federate
      port: http
      scheme: https
      tlsConfig:
        caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
        serverName: prometheus.redhat-ods-monitoring.svc
      scrapeTimeout: 10s
      interval: 30s
  namespaceSelector:
    matchNames:
      - redhat-ods-monitoring
  selector:
    matchLabels:
      app: prometheus
---
# servicemonitoring for rhods operator
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    control-plane: controller-manager
  name: rhods-controller-manager-metrics-monitor
  namespace: redhat-ods-operator
spec:
  endpoints:
    - path: /metrics
      port: https
      scheme: https
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      tlsConfig:
        insecureSkipVerify: true
  namespaceSelector:
    matchNames:
      - redhat-ods-operator
  selector:
    matchLabels:
      control-plane: controller-manager

---
# servicemonitoring for openshift-monitoring scrap
# move from modelmesh-monitoring
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: rhods-monitor-federation2
  labels:
    monitor-component: rhods-resources
    team: rhods
spec:
  endpoints:
    - interval: 30s
      params:
        'match[]':
          - '{__name__= "haproxy_backend_http_average_response_latency_milliseconds"}'
          - '{__name__= "haproxy_backend_http_responses_total"}'
          - '{__name__= "container_cpu_usage_seconds_total"}'
          - '{__name__= "container_memory_working_set_bytes"}'
          - '{__name__= "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate"}'
          - '{__name__= "cluster:namespace:pod_cpu:active:kube_pod_container_resource_limits"}'
          - '{__name__= "cluster:namespace:pod_cpu:active:kube_pod_container_resource_requests"}'
          - '{__name__= "cluster:namespace:pod_memory:active:kube_pod_container_resource_requests"}'
          - '{__name__= "cluster:namespace:pod_memory:active:kube_pod_container_resource_limits"}'
          - '{__name__= "kube_persistentvolumeclaim_resource_requests_storage_bytes"}'
          - '{__name__= "kubelet_volume_stats_used_bytes"}'
          - '{__name__= "kubelet_volume_stats_capacity_bytes"}'
      honorLabels: true
      scrapeTimeout: 10s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
      bearerTokenSecret:
        key: ""
      path: /federate
      port: metrics
      scheme: https
      tlsConfig:
        ca: {}
        cert: {}
        insecureSkipVerify: true
  namespaceSelector:
    matchNames:
      - openshift-monitoring
  selector:
    matchLabels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring