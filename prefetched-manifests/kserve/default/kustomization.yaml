apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Adds namespace to all resources.
namespace: kserve

# Add recommended Kubernetes labels
commonLabels:
  app.kubernetes.io/part-of: kserve

# Labels to add to all resources and selectors.
#commonLabels:
#  app.kubernetes.io/name: kserve
resources:
- ../crd
- ../configmap
- ../rbac
- ../manager
- ../webhook
# - ../certmanager # not needed, because ODH is using OpenShift's serving certificates for WebHooks
# - ../localmodels # This is commented out for 2.16
# - ../localmodelnodes
- network-policies.yaml # ODH specific
- ../llmisvc

generatorOptions:
  disableNameSuffixHash: true

replacements:
# Replace webhook service name
- source:
    fieldPath: metadata.name
    kind: Service
    name: kserve-webhook-server-service
    version: v1
  targets:
  # All webhook configurations that need service name
  - select:
      kind: MutatingWebhookConfiguration
    fieldPaths:
    - webhooks.*.clientConfig.service.name
  - select:
      kind: ValidatingWebhookConfiguration
    fieldPaths:
    - webhooks.*.clientConfig.service.name
  - select:
      kind: ValidatingWebhookConfiguration
      name: trainedmodel.serving.kserve.io
  - fieldPaths:
    - webhooks.*.clientConfig.service.name
    select:
      kind: ValidatingWebhookConfiguration
      name: inferencegraph.serving.kserve.io
#  - fieldPaths:
#    - webhooks.*.clientConfig.service.name
#    select:
#      kind: ValidatingWebhookConfiguration
#      name: clusterservingruntime.serving.kserve.io
  - fieldPaths:
    - webhooks.*.clientConfig.service.name
    select:
      kind: ValidatingWebhookConfiguration
      name: servingruntime.serving.kserve.io
  - fieldPaths:
      - webhooks.*.clientConfig.service.name
    select:
      kind: ValidatingWebhookConfiguration
      name: localmodelcache.serving.kserve.io
  - fieldPaths:
    - spec.commonName
    - spec.dnsNames.0
    options:
      delimiter: '.'
      index: 0
    select:
      kind: Certificate
      name: serving-cert
      namespace: kserve      
# Replace webhook service namespace and CA injection
- source:
    fieldPath: metadata.namespace
    kind: Deployment
    name: kserve-controller-manager
    version: v1
  targets:
  # All webhook configurations that need namespace
  - select:
      kind: MutatingWebhookConfiguration
    fieldPaths:
    - webhooks.*.clientConfig.service.namespace
  - select:
      kind: ValidatingWebhookConfiguration
    fieldPaths:
    - webhooks.*.clientConfig.service.namespace
  - select:
      kind: ValidatingWebhookConfiguration
      name: trainedmodel.serving.kserve.io
  - fieldPaths:
    - webhooks.*.clientConfig.service.namespace
    select:
      kind: ValidatingWebhookConfiguration
      name: inferencegraph.serving.kserve.io
#  - fieldPaths:
#    - webhooks.*.clientConfig.service.namespace
#    select:
#      kind: ValidatingWebhookConfiguration
#      name: clusterservingruntime.serving.kserve.io
  - fieldPaths:
    - webhooks.*.clientConfig.service.namespace
    select:
      kind: ValidatingWebhookConfiguration
      name: servingruntime.serving.kserve.io

# Protect the /metrics endpoint by putting it behind auth.
# Only one of manager_auth_proxy_patch.yaml and
# manager_prometheus_metrics_patch.yaml should be enabled.
# If you want your controller-manager to expose the /metrics
# endpoint w/o any authn/z, uncomment the following line and
# comment manager_auth_proxy_patch.yaml.
patches:
- path: manager_image_patch.yaml
#- path: manager_auth_proxy_patch.yaml
- path: isvc_mutatingwebhook_cainjection_patch.yaml
- path: isvc_validatingwebhook_cainjection_patch.yaml
- path: inferencegraph_validatingwebhook_cainjection_patch.yaml
- path: trainedmodel_validatingwebhook_cainjection_patch.yaml
#- path: clusterservingruntime_validatingwebhook_cainjection_patch.yaml
- path: servingruntime_validationwebhook_cainjection_patch.yaml
- path: svc_webhook_cainjection_patch.yaml

# - path: localmodelcache_validatingwebhook_cainjection_patch.yaml
- path: llmisvc_validatingwebhook_cainjection_patch.yaml
- path: llmisvcconfig_validatingwebhook_cainjection_patch.yaml
- path: manager_resources_patch.yaml
- path: cainjection_conversion_webhook.yaml
# - path: localmodel_manager_image_patch.yaml
# Since OpenShift serving-certificates are being used,
# remove CA bundle placeholders
# - patch: |-
#     - op: remove
#       path: "/spec/conversion/webhook/clientConfig/caBundle"
#   target:
#     kind: CustomResourceDefinition
#     name: inferenceservices.serving.kserve.io
# - patch: |-
#     - op: remove
#       path: "/webhooks/0/clientConfig/caBundle"
#     - op: remove
#       path: "/webhooks/1/clientConfig/caBundle"
#   target:
#     kind: MutatingWebhookConfiguration
# - patch: |-
#     - op: remove
#       path: "/webhooks/0/clientConfig/caBundle"
#   target:
#     kind: ValidatingWebhookConfiguration
